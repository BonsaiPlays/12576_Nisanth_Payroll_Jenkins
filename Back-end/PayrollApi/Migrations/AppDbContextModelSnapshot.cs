// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayrollApi.Data;

#nullable disable

namespace PayrollApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PayrollApi.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Details")
                        .HasColumnType("longtext");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PerformedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PerformedBy")
                        .HasColumnType("longtext");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("PayrollApi.Models.CTCAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("CTCStructureId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CTCStructureId");

                    b.ToTable("CTCAllowances");
                });

            modelBuilder.Entity("PayrollApi.Models.CTCDeduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("CTCStructureId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CTCStructureId");

                    b.ToTable("CTCDeductions");
                });

            modelBuilder.Entity("PayrollApi.Models.CTCStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Basic")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EffectiveTo")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeProfileId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossCTC")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("HRA")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxPercent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("EmployeeProfileId");

                    b.ToTable("CTCStructures");
                });

            modelBuilder.Entity("PayrollApi.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 18, 4, 54, 11, 827, DateTimeKind.Utc).AddTicks(389),
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 18, 4, 54, 11, 827, DateTimeKind.Utc).AddTicks(717),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 18, 4, 54, 11, 827, DateTimeKind.Utc).AddTicks(718),
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 18, 4, 54, 11, 827, DateTimeKind.Utc).AddTicks(719),
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 18, 4, 54, 11, 827, DateTimeKind.Utc).AddTicks(720),
                            Name = "IT Support"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 9, 18, 4, 54, 11, 827, DateTimeKind.Utc).AddTicks(720),
                            Name = "Operations"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 9, 18, 4, 54, 11, 827, DateTimeKind.Utc).AddTicks(721),
                            Name = "R&D"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 9, 18, 4, 54, 11, 827, DateTimeKind.Utc).AddTicks(721),
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 9, 18, 4, 54, 11, 827, DateTimeKind.Utc).AddTicks(722),
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("PayrollApi.Models.EmployeeProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("EmployeeProfiles");
                });

            modelBuilder.Entity("PayrollApi.Models.Memo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Memos");
                });

            modelBuilder.Entity("PayrollApi.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("PayrollApi.Models.Payslip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Basic")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeProfileId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<decimal>("HRA")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LOPDays")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<decimal>("NetPay")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxDeducted")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("EmployeeProfileId");

                    b.ToTable("Payslips");
                });

            modelBuilder.Entity("PayrollApi.Models.PayslipAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PayslipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PayslipId");

                    b.ToTable("PayslipAllowances");
                });

            modelBuilder.Entity("PayrollApi.Models.PayslipDeduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PayslipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PayslipId");

                    b.ToTable("PayslipDeductions");
                });

            modelBuilder.Entity("PayrollApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 18, 4, 54, 12, 35, DateTimeKind.Utc).AddTicks(5223),
                            Email = "nisanthsaru.oto@gmail.com",
                            FullName = "System Admin",
                            IsActive = true,
                            PasswordHash = "$2a$11$aGJWgHRLjZhk0pU9fqiTyOJxVsIMBjUHUk1pBaEPh8rPsu9PG0aC2",
                            Role = 1
                        });
                });

            modelBuilder.Entity("PayrollApi.Models.CTCAllowance", b =>
                {
                    b.HasOne("PayrollApi.Models.CTCStructure", "CTCStructure")
                        .WithMany("Allowances")
                        .HasForeignKey("CTCStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CTCStructure");
                });

            modelBuilder.Entity("PayrollApi.Models.CTCDeduction", b =>
                {
                    b.HasOne("PayrollApi.Models.CTCStructure", "CTCStructure")
                        .WithMany("Deductions")
                        .HasForeignKey("CTCStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CTCStructure");
                });

            modelBuilder.Entity("PayrollApi.Models.CTCStructure", b =>
                {
                    b.HasOne("PayrollApi.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PayrollApi.Models.EmployeeProfile", "EmployeeProfile")
                        .WithMany("CTCStructures")
                        .HasForeignKey("EmployeeProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("EmployeeProfile");
                });

            modelBuilder.Entity("PayrollApi.Models.EmployeeProfile", b =>
                {
                    b.HasOne("PayrollApi.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("PayrollApi.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("PayrollApi.Models.EmployeeProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PayrollApi.Models.Memo", b =>
                {
                    b.HasOne("PayrollApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PayrollApi.Models.Payslip", b =>
                {
                    b.HasOne("PayrollApi.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PayrollApi.Models.EmployeeProfile", "EmployeeProfile")
                        .WithMany()
                        .HasForeignKey("EmployeeProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("EmployeeProfile");
                });

            modelBuilder.Entity("PayrollApi.Models.PayslipAllowance", b =>
                {
                    b.HasOne("PayrollApi.Models.Payslip", "Payslip")
                        .WithMany("AllowanceItems")
                        .HasForeignKey("PayslipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payslip");
                });

            modelBuilder.Entity("PayrollApi.Models.PayslipDeduction", b =>
                {
                    b.HasOne("PayrollApi.Models.Payslip", "Payslip")
                        .WithMany("DeductionItems")
                        .HasForeignKey("PayslipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payslip");
                });

            modelBuilder.Entity("PayrollApi.Models.CTCStructure", b =>
                {
                    b.Navigation("Allowances");

                    b.Navigation("Deductions");
                });

            modelBuilder.Entity("PayrollApi.Models.EmployeeProfile", b =>
                {
                    b.Navigation("CTCStructures");
                });

            modelBuilder.Entity("PayrollApi.Models.Payslip", b =>
                {
                    b.Navigation("AllowanceItems");

                    b.Navigation("DeductionItems");
                });

            modelBuilder.Entity("PayrollApi.Models.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
